{"version":3,"sources":["store/configureStore.js","store/models sync nonrecursive //.js$","consts/env.js","routes/LazyComponent.js","routes/PrivateRoute.js","routes/routeData.js","routes/index.js","utils/toolTypes/browser_utls.js","store/index.js","App.js","serviceWorker.js","index.js","consts/statusCode.js","utils/request.js","store/models/demo.js","store/loader.js","store/configureStore.prod.js"],"names":["module","exports","require","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","ctext","process","console","info","Loading","props","error","LazyComponent","importFunc","lazy","fallback","PrivateRoute","Component","component","redirect","rest","location","render","to","routeData","path","isH5Flag","navigator","userAgent","toLowerCase","match","item","newComponent","componentH5","componentPc","exact","la","key","store","configureStore","Sentry","environment","dsn","App","hasError","Boolean","window","hostname","ReactDOM","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","message","HTTP_STATUS_MESSAGE","400","401","403","404","500","502","503","axios","defaults","timeout","headers","common","isCustomHeaders","interceptors","request","use","config","Authorization","err","Promise","reject","response","res","statusMsg","status","safeRequest","url","options","method","data","opts","state","reducers","result","payload","assign","updateState","effects","dispatch","incrementAsync","rootState","setTimeout","count","increment","getResult","params","name","age","log","JSON","parse","files","models","forEach","filename","replace","default","loadingPlugin","createLoadingPlugin","asNumber","init","plugins"],"mappings":"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","file":"static/js/main~06837ae4.79bc88a5.chunk.js","sourcesContent":["if (process.env.NODE_ENV === 'production') {\n  module.exports = require('./configureStore.prod')\n} else {\n  module.exports = require('./configureStore.dev')\n}\n","var map = {\n\t\"./demo.js\": 434\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 414;","// 判断当前是哪个环境\nexport const currentEnv = process.env.FIG_ENV;\nconst ctext = currentEnv !== 'prod' ? `开课吧${currentEnv}` : '开课吧';\n\n// 不要删除，用来识别当前项目环境\n// eslint-disable-next-line\nconsole.info(\n  `\\n %c ${ctext} %c https://kaikeba.com \\n`,\n  'color: #fff; background: #03a8e8; padding:5px 0; font-size:12px;font-weight: bold;',\n  'background: #03a8e8; padding:5px 0; font-size:12px;',\n);\n\nexport const isDevEnv = currentEnv === 'dev';\nexport const isPreEnv = currentEnv === 'pre';\nexport const isTestEnv = currentEnv === 'test';\nexport const isProdEnv = currentEnv === 'prod';\n\nconst apiPrefix = {\n  dev: 'test',\n  test: 'test',\n  pre: 'pre',\n  prod: '',\n};\nexport const SENTRY_DSN = `https://b230aa0f62684661963e5cc267184dcd@am.kaikeba.com/48`;\nexport const getApiPrefix = apiPrefix[currentEnv];\nexport const apiBaseUrl = `https://open${getApiPrefix}.kaikeba.com/`;\n","import React, { lazy, Suspense } from 'react';\nimport { isDevEnv } from '../consts/env';\n\nconst Loading = props => {\n  const { error } = props;\n  const isDev = isDevEnv;\n  if (error && isDev) {\n    return (\n      <div>\n        <p>{error.stack ? error.stack : ''}</p>\n      </div>\n    );\n  }\n  return <div />;\n};\n\nconst LazyComponent = importFunc => {\n  const LazyComponent = lazy(importFunc);\n  return props => (\n    <Suspense fallback={<Loading />}>\n      <LazyComponent {...props} />\n    </Suspense>\n  );\n};\n\nexport default LazyComponent;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({ component: Component, redirect, location, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        if (redirect) {\n          return <Redirect to={redirect} />;\n        }\n        return <Component {...props} />;\n      }}\n    />\n  );\n};\nexport default PrivateRoute;\n","// 页面路由\nexport const routeData = [\n  {\n    path: '/',\n    redirect: '/home', // 跳转指定页面\n  },\n  {\n    path: '/home',\n    component: () => import('../views/Home'), // 声明此组件，将不判断是否显示h5/pc组件\n    // componentPc: () => import('../views/Home'), // pc页面\n    // componentH5: () => import('../views/Home'), // h5页面\n  },\n  {\n    path: '/About',\n    component: () => import('../views/About'),\n  },\n];\n","import React from 'react';\nimport { Switch } from 'react-router-dom';\nimport la from './LazyComponent';\nimport PrivateRoute from './PrivateRoute';\nimport { routeData } from './routeData';\nimport { isMobile } from '../utils/toolTypes/browser_utls';\n\nconst isH5Flag = isMobile();\n\nexport default () => (\n  <Switch>\n    {routeData.map(item => {\n      let newComponent = item.component;\n      if (!item.component) {\n        newComponent = isH5Flag ? item.componentH5 : item.componentPc;\n      }\n      return (\n        <PrivateRoute\n          path={item.path}\n          exact\n          component={la(newComponent)}\n          key={item.path}\n          redirect={item.redirect}\n        />\n      );\n    })}\n  </Switch>\n);\n","/**\n * 判断用户浏览器终端信息\n *\n * browser.versions.ios 判断是否是IOS设备\n */\nexport const browser = () => {\n  if (navigator) {\n    const u = navigator ? navigator.userAgent : '';\n    return {\n      trident: u.indexOf('Trident') > -1, // IE内核\n      presto: u.indexOf('Presto') > -1, // opera内核\n      webKit: u.indexOf('AppleWebKit') > -1, // 苹果、谷歌内核\n      gecko: u.indexOf('Gecko') > -1 && u.indexOf('KHTML') === -1, // 火狐内核\n      mobile: !!u.match(/AppleWebKit.*Mobile.*/), // 是否为移动终端\n      ios: !!u.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/), //ios终端\n      android: u.indexOf('Android') > -1 || u.indexOf('Adr') > -1, // android终端\n      iPhone: u.indexOf('iPhone') > -1, // 是否为iPhone或者QQHD浏览器\n      iPad: u.indexOf('iPad') > -1, // 是否iPad\n      webApp: u.indexOf('Safari') === -1, // 是否web应该程序，没有头部与底部\n      weixin: u.indexOf('MicroMessenger') > -1, // 是否微信\n      qq: u.match(/\\sQQ/i) === ' qq', // 是否QQ\n    };\n  }\n  return {};\n};\n\nexport const isMobile = () => {\n  let ua = navigator.userAgent.toLowerCase();\n  let is_mobile =\n    ua.match(\n      /(ipod|iphone|android|coolpad|mmp|smartphone|midp|wap|xoom|symbian|j2me|blackberry|wince)/i,\n    ) !== null;\n  // if (is_mobile) {\n  //   return true\n  // }\n  return is_mobile;\n};\n\nexport const isPc = () => {\n  const ua = navigator.userAgent;\n  if (\n    /AppleWebKit.*Mobile/i.test(ua) ||\n    /MIDP|SymbianOS|NOKIA|SAMSUNG|LG|NEC|TCL|Alcatel|BIRD|DBTEL|Dopod|PHILIPS|HAIER|LENOVO|MOT-|Nokia|SonyEricsson|SIE-|Amoi|ZTE/.test(\n      ua,\n    )\n  ) {\n    return !/Android|webOS|iPhone|iPod|BlackBerry|iPad/i.test(ua);\n  }\n  return true;\n};\n\nexport const isApp = () => {\n  const ua = navigator.userAgent.toLowerCase();\n  if (ua.indexOf('kkbmobile') !== -1) {\n    return true;\n  }\n  return false;\n};\n","import configureStore from './configureStore'\n\n// const preloadedState = {\n//   userInfo: window.userInfo\n// }\n\n// const store = configureStore(preloadedState)\n\nconst store = configureStore()\n\nexport default store\n\n","import React, { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport Routes from './routes';\nimport store from './store';\nimport { currentEnv, SENTRY_DSN } from './consts/env';\nimport * as Sentry from '@sentry/browser';\n\nimport './App.css';\nimport './reset.css';\n\ntry {\n  Sentry.init({ environment: currentEnv, dsn: SENTRY_DSN });\n} catch (error) {}\n\nclass App extends Component {\n  componentDidCatch(error) {\n    Sentry.captureException(error);\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      hasError: true,\n    };\n  }\n\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <Routes />\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'core-js/stable';\nimport 'regenerator-runtime/runtime';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const HTTP_STATUS = {\n  SUCCESS: 200,\n  NOT_MODIFIED: 304,\n  CLIENT_ERROR: 400,\n  AUTHENTICATE: 401,\n  FORBIDDEN: 403,\n  NOT_FOUND: 404,\n  SERVER_ERROR: 500,\n  BAD_GATEWAY: 502,\n  SERVICE_UNAVAILABLE: 503,\n  GATEWAY_TIMEOUT: 504,\n};\n\nexport const COMMON_STATUS = {\n  CLIENT_ERROR: -40000,\n  NOT_FOUND: -40400, // \"请求资源不存在\",\n  API_NOT_FOUND: -40401, // \"请求方法不存在\",\n  EXCEPTION: -50000, // \"系统异常\",\n  PARAM_ERROR: -40001, // \"参数错误\",\n  AUTH_FAILED: -40100, // \"认证错误\",\n  NO_PERMISION: -40302, // \"没有权限\",\n  NET_REQUEST_FAILED: -18939904, // \"网络请求失败\"\n};\n\n// 错误提示消息\nexport const HTTP_STATUS_MESSAGE = {\n  400: '400/404 接口请求失败，请重试！如有疑问，联系管理员。',\n  401: '需要登陆授权',\n  403: '抱歉！你暂无权限操作此功能',\n  404: '400/404 接口请求失败，请重试！如有疑问，联系管理员。',\n  500: '500服务端错误，请稍后重试！',\n  502: '500服务端错误，请稍后重试！',\n  503: '500服务端错误，请稍后重试！',\n};\n","import axios from 'axios';\nimport { assert } from '../utils';\nimport { HTTP_STATUS, HTTP_STATUS_MESSAGE } from '../consts/statusCode';\n\n// axios.defaults.withCredentials = true;\naxios.defaults.timeout = 50000;\naxios.defaults.headers.common['Content-Type'] = 'application/json';\n// axios.defaults.baseURL = '';\naxios.defaults.isCustomHeaders = true; // 是否拦截器重置请求头\n\naxios.interceptors.request.use(\n  config => {\n    if (config.isCustomHeaders) {\n      config.headers.Authorization = 'token';\n    }\n    return config;\n  },\n  err => {\n    return Promise.reject(err);\n  },\n);\n\n// 中间件 拦截请求-\naxios.interceptors.response.use(\n  response => {\n    return response;\n  },\n  err => {\n    if (!err.response) {\n      return;\n    }\n    const res = err.response;\n\n    const statusMsg = HTTP_STATUS_MESSAGE[res.status];\n    if (statusMsg) {\n      console.error(statusMsg);\n    }\n    return Promise.reject(err);\n  },\n);\n\n// eslint-disable-next-line no-unused-vars\nconst exceptionHandling = data => {\n  if (data.status === HTTP_STATUS.SUCCESS || data.status === HTTP_STATUS.NOT_MODIFIED) {\n    if (!data.data.data) {\n      assert(false, 'api data is empty');\n      return;\n    }\n    return data;\n  }\n  assert(false, data.statusText);\n\n  return false;\n};\n\nconst safeRequest = (url, options) => {\n  return new Promise((resolve, reject) => {\n    axios({\n      method: 'GET',\n      ...options,\n      url,\n    }).then(\n      res => {\n        if (res) {\n          resolve(res.data);\n        } else {\n          reject(res);\n        }\n      },\n      err => {\n        reject(err);\n      },\n    );\n  });\n};\n\n/**\n * get\n * @param url\n * @param opts\n * @returns {Promise}\n */\nconst get = (url, opts = {}) => {\n  return safeRequest(url, opts);\n};\n\n/**\n * post\n * @param url\n * @param opts\n * @returns {Promise}\n */\nconst post = (url, opts = {}) => {\n  return safeRequest(url, {\n    ...opts,\n    method: 'POST',\n  });\n};\n\n/**\n * put\n * @param url\n * @param opts\n * @returns {Promise}\n */\nconst put = (url, opts = {}) => {\n  return safeRequest(url, {\n    ...opts,\n    method: 'PUT',\n  });\n};\n\nexport default {\n  get,\n  post,\n  put,\n};\n","import request from '../../utils/request';\n\nexport default {\n  state: {\n    status: -1,\n    message: '',\n    data: null,\n  },\n  reducers: {\n    result(state, payload) {\n      return Object.assign({}, state, payload);\n    },\n    updateState(state, payload) {\n      return {\n        ...state,\n        ...payload,\n      };\n    },\n  },\n  effects: dispatch => ({\n    // handle state changes with impure functions.\n    // use async/await for async actions\n    async incrementAsync(payload, rootState) {\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      dispatch.count.increment(payload);\n    },\n    async getResult(payload, rootState) {\n      const params = {\n        name: 'stark',\n        age: 18,\n      };\n      const res = await request.get('https://api.shudong.wang/v1/movies/hot', params);\n      console.log('JSON.parse(res.data)', JSON.parse(res.data));\n      this.result(JSON.parse(res.data));\n    },\n  }),\n};\n","/**\n * @author stark.wang\n * @blog http://shudong.wang\n * The file enables `models` to import all models\n * in a one-shot manner. There should not be any reason to edit this file.\n */\nconst files = require.context(\"./models\", false, /\\.js$/);\nconst models = {};\nfiles.keys().forEach(key => {\n  const filename = key.replace(/(\\.\\/|\\.js)/g, \"\");\n  models[filename] = files(key).default;\n});\nexport default models;\n","import { init } from '@rematch/core'\nimport createLoadingPlugin from '@rematch/loading'\nimport models from './loader'\nconst loadingPlugin = createLoadingPlugin({ asNumber: true })\n\nconst configureStore = () =>\n  init({\n    plugins: [loadingPlugin],\n    models\n  })\nexport default configureStore\n"],"sourceRoot":""}